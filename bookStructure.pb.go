// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bookStructure.proto

/*
Package books is a generated protocol buffer package.

It is generated from these files:
	bookStructure.proto

It has these top-level messages:
	Books
*/
package books

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Books_BookType int32

const (
	Books_PDF   Books_BookType = 0
	Books_EPUD  Books_BookType = 1
	Books_EBOOK Books_BookType = 2
)

var Books_BookType_name = map[int32]string{
	0: "PDF",
	1: "EPUD",
	2: "EBOOK",
}
var Books_BookType_value = map[string]int32{
	"PDF":   0,
	"EPUD":  1,
	"EBOOK": 2,
}

func (x Books_BookType) String() string {
	return proto.EnumName(Books_BookType_name, int32(x))
}
func (Books_BookType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Books struct {
	Id         int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	PageNumber int32  `protobuf:"varint,3,opt,name=page_number,json=pageNumber" json:"page_number,omitempty"`
	Isbn       string `protobuf:"bytes,4,opt,name=isbn" json:"isbn,omitempty"`
	Category   string `protobuf:"bytes,5,opt,name=category" json:"category,omitempty"`
}

func (m *Books) Reset()                    { *m = Books{} }
func (m *Books) String() string            { return proto.CompactTextString(m) }
func (*Books) ProtoMessage()               {}
func (*Books) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Books) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Books) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Books) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *Books) GetIsbn() string {
	if m != nil {
		return m.Isbn
	}
	return ""
}

func (m *Books) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type Books_Author struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *Books_Author) Reset()                    { *m = Books_Author{} }
func (m *Books_Author) String() string            { return proto.CompactTextString(m) }
func (*Books_Author) ProtoMessage()               {}
func (*Books_Author) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Books_Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Books_Author) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Books_Author) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*Books)(nil), "books.Books")
	proto.RegisterType((*Books_Author)(nil), "books.Books.Author")
	proto.RegisterEnum("books.Books_BookType", Books_BookType_name, Books_BookType_value)
}

func init() { proto.RegisterFile("bookStructure.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x71, 0x1a, 0x97, 0xe4, 0x90, 0x50, 0x74, 0x30, 0x58, 0x5d, 0xa8, 0x3a, 0x65, 0x62,
	0xe1, 0x17, 0x50, 0xb5, 0x2c, 0x48, 0x6d, 0x15, 0x60, 0x46, 0x76, 0x7b, 0x2a, 0x16, 0x4d, 0x1c,
	0x39, 0xf6, 0xd0, 0x7f, 0xce, 0x88, 0x7c, 0x91, 0xb2, 0xbd, 0xf7, 0xc9, 0x4f, 0xfa, 0x7c, 0xf0,
	0x60, 0x9c, 0xfb, 0xfd, 0x08, 0x3e, 0x1e, 0x43, 0xf4, 0xf4, 0xdc, 0x7b, 0x17, 0x1c, 0xca, 0x04,
	0x87, 0xd5, 0x9f, 0x00, 0xb9, 0x4e, 0x09, 0xef, 0x21, 0xb3, 0x27, 0x25, 0x96, 0xa2, 0x96, 0x4d,
	0x66, 0x4f, 0xf8, 0x08, 0x32, 0xd8, 0x70, 0x21, 0x95, 0x2d, 0x45, 0x5d, 0x36, 0x63, 0xc1, 0x27,
	0xb8, 0xeb, 0xf5, 0x99, 0xbe, 0xbb, 0xd8, 0x1a, 0xf2, 0x6a, 0xc6, 0xcf, 0x21, 0xa1, 0x1d, 0x13,
	0x44, 0xc8, 0xed, 0x60, 0x3a, 0x95, 0xf3, 0x8a, 0x33, 0x2e, 0xa0, 0x38, 0xea, 0x40, 0x67, 0xe7,
	0xaf, 0x4a, 0x32, 0x9f, 0xfa, 0x62, 0x07, 0xf3, 0xd7, 0x18, 0x7e, 0x1c, 0x2f, 0x3b, 0xdd, 0x12,
	0x2b, 0x94, 0x0d, 0xe7, 0xb4, 0x8c, 0x03, 0x79, 0xe6, 0xa3, 0xc7, 0xd4, 0x93, 0x20, 0xb5, 0xda,
	0x5e, 0x58, 0xa2, 0x6c, 0xc6, 0xb2, 0xaa, 0xa1, 0x48, 0xff, 0xf9, 0xbc, 0xf6, 0x84, 0xb7, 0x30,
	0x3b, 0x6c, 0xde, 0xaa, 0x1b, 0x2c, 0x20, 0xdf, 0x1e, 0xbe, 0x36, 0x95, 0xc0, 0x12, 0xe4, 0x76,
	0xbd, 0xdf, 0xbf, 0x57, 0x99, 0x99, 0xf3, 0x21, 0x5e, 0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x67,
	0x64, 0x06, 0xca, 0x1f, 0x01, 0x00, 0x00,
}
